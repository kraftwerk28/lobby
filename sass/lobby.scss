$radius: 10px;
$border: 3px solid lime;

* {
  color: white;
  font-family: 'Roboto Mono', monospace;
  -webkit-tap-highlight-color: transparent;
}

html, body {
  // pointer-events: none;
  margin: 0px;
  overflow-x: hidden;

  // overflow: hidden;
}

body {
  position: relative;
}

button {
  position: relative;
}

::-webkit-scrollbar {
  display: none;
}

p {
  text-indent: 10px;
  display: inline;
}

a {
  cursor: pointer;
}

#gravity-simulator {
  filter: blur(2px);
}

%wall {
  display: block;
  position: relative;
  box-sizing: border-box;
  width: 100vmin;
  height: 100%;
  margin: auto;
  overflow: scroll;
}

#main {
  @extend %wall;

  overflow: visible;

  // background-color: rgba(0, 0, 0, 0.5);
  // background-image: url('./rootback.jpg');
}

#activities {
  position: absolute;
  width: 100%;
  top: 65px;
  bottom: 50px;

  > table {
    position: relative;
    width: 100%;
    height: 100%;
    table-layout: fixed;

    > td {
      width: 50%;
    }
  }
}

.activity {
  position: relative;
  flex: 1;
  border: 3px solid lime;
  border-radius: 5px;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  z-index: 0;
  cursor: pointer;
  padding: 20px;

  > p {
    font-size: x-large;
  }

  &:hover {
    transform: scale(1.02);
    background-color: black;
    z-index: 10 !important;
  }
}

#about {
  @extend %wall;

  padding-top: 60px;
  padding-left: 10px;
  padding-right: 10px;
  border-left: 3px solid lime;
  border-right: 3px solid lime;
}

#title {
  overflow: hidden;
  white-space: nowrap;
  text-align: center;
  font-size: 6vmin;
  border-bottom: 3px solid lime;
  border-right: 3px solid lime;
  border-left: 3px solid lime;
  border-bottom-left-radius: $radius;
  border-bottom-right-radius: $radius;

  span {
    font-family: 'Courier New', Courier, monospace;
    vertical-align: bottom;
    font-size: 150%;
    font-weight: bolder;
  }
}

#bottom {
  font-size: x-large !important;
  position: absolute;
  bottom: 0px;
  left: 0px;
  right: 0px;
  text-align: center;
  transition-duration: 1s;
  border-top: 3px solid lime;
  border-left: 3px solid lime;
  border-right: 3px solid lime;
  border-top-left-radius: $radius;
  border-top-right-radius: $radius;
  height: 40px;

  button {
    position: relative;
    min-height: inherit;
    z-index: 5;

    i {
      vertical-align: middle;
    }
  }
}

$popup-width: 100vmin;
$popup-height: 100%;

.popup {
  position: absolute;
  left: 0px;
  top: 0px;
  bottom: 0px;
  right: 0px;
  background-color: rgba(0, 0, 0, 0.95);

  > div {
    @extend %wall;

    width: 100vmin;
    height: $popup-width;
    top: 50%;
    transform: translateY(-50%);
    border: 3px solid lime;
    border-radius: 10px;
    animation: showPopup 0.5s;
    animation-fill-mode: both;
  }

  z-index: 20;
  display: none;
}

.material-icons {
  font-size: xx-large !important;
  color: white;
}

@keyframes showPopup {
  0% {
    width: 20vmin;
    height: 20vmin;
  }

  50% {
    width: $popup-width;
    height: 20vmin;
  }

  100% {
    width: $popup-width;
    height: $popup-height;
  }
}

@keyframes hidePopup {
  0% {
    width: $popup-width;
    height: $popup-height;
  }

  50% {
    width: $popup-width;
    height: 20vmin;
    opacity: 1;
  }

  100% {
    opacity: 0;
    width: 1vmin;
    height: 20vmin;
  }
}

.glitch {
  position: relative;

  &::before, &::after {
    content: '@kraftwerk28';
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-direction: alternate-reverse;
    background-color: black;
  }

  &::before {
    left: -4px;
    width: 101%;

    // color: aqua;
    animation-name: glitching1;
    text-shadow: 1px 0 red;
  }

  &::after {
    right: -3px;
    width: 101%;
    text-shadow: -2px 0 blue;

    // color: tomato;
    animation-name: glitching2;
  }
}

@keyframes glitching1 {
  @for $i from 0 to 10 {
    #{percentage($i * 1 / 10)} {
      clip: rect(random(50) + px, 9999px, random(50) + px, 0);
    }
  }
}

@keyframes glitching2 {
  @for $i from 0 to 10 {
    #{percentage($i * 1 / 10)} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
  }
}

#loadmask {
  position: fixed;
  top: 0px;
  left: 0px;
  bottom: 0px;
  right: 0px;
  background-color: black;
  z-index: 100;
  transition-duration: 1s;
}
